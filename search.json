[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Kom i gang med DAPLA",
    "section": "",
    "text": "Denne boken er ment som enkel-√•-bruke manual for √• ta i bruk SSBs nye dataplattform Dapla. Plattformen fors√∏ker √• gj√∏re statistikkprodusenter og forskere s√• selvhjulpne som mulig. M√•lsetningen er at tjenestene som tilbys skal kunne tas i bruk p√• en enkel og intuitiv m√•te. Men uansett hvor lett tilgjengelig tjenester er, og hvor mye arbeid som er lagt √• gj√∏re l√∏sninger brukervennlige, s√• trenger de fleste i SSB en klar og tydelig veiledning for hvordan de skal brukes og i hvilken st√∏rre sammenheng tjenestene inng√•r. Dapla-manualen er ment √• v√¶re en s√•nn st√∏tte i statistikkernes hverdag. Uansett om man lurer p√• hvordan man logger seg inn p√• plattformen, eller om man √∏nsker informasjon om kj√∏remilj√∏et for mer kompliserte maskinl√¶ringsmodeller, s√• skal man finne veiledning i denne manualen. M√•lgruppen er b√•de nybegynneren og den mer erfarne.\n\n\n\n\n\n\nDenne boken er skrevet med Quarto og er publisert p√• https://statisticsnorway.github.io/dapla-manual/. Alle ansatte i SSB kan bidra til boken ved klone dette repoet, gj√∏re endringer i en branch, og sende en pull request til administratorene av repoet (Team Statistikktjenester).\n\n\n\n\n\nDapla-manualen er initiert og skrevet av Team Statistikktjenester i SSB. Bidragsytere er √òyvind Bruer-Skarsb√∏, Miles Winther, Bj√∏rn Andre Skaar og Anders Lunde. Ved behov for oppdateringer og nytt innhold h√•per vi at alle i SSB kan bidra."
  },
  {
    "objectID": "preface.html",
    "href": "preface.html",
    "title": "Forord",
    "section": "",
    "text": "Det er tilrettelagt for en treningsarena i bakkemilj√∏et. Dette milj√∏et er nesten identisk med det som m√∏ter deg p√• Dapla, med unntak av at du her har tilgang til mange av de gamle systemene og mye mindre hestekrefter i maskinene. Ideen er at SSB-ere ofte vil √∏nske √• l√¶re seg de nye verkt√∏yene2 i kjente og kj√¶re omgivelser f√∏rst, og deretter flytte et ferdig skrevet produksjonsl√∏p til Dapla. Del 4 av denne boken beskriver mer utfyllende hvordan dette milj√∏et skiller seg fra Dapla, og hvordan man gj√∏r en del vanlige operasjoner mot de gamle bakkesystemene.\nSiste delen av boken kaller vi Avansert og tar for seg ulike emner som mer avanserte brukere typisk trenger informasjon om. Her finner man blant annet informasjon om hvilke databaser man kan bruke og hvilke form√•l de er egnet for. Her beskrives ogs√• hvordan man kan bruke andre IDE-er enn Jupyterlab hvis man √∏nsker det. Tjenester for schedulerte kj√∏ringer av Notebooks blir ogs√• diskutert.\nForh√•pentligvis senker denne boken terskelen for √• ta i bruk Dapla. Kommentarer og √∏nsker vedr√∏rende boken tas imot med √•pne armer.\nGod forn√∏yelseüòÅ\n\n\n\n\n\nI denne boken omtaler vi den gamle produksjonssonen, ofte kalt prodsonen, som bakke, og det nye skymilj√∏et Google Cloud som sky. Det er ikke helt presist men duger for form√•lene i denne boken.‚Ü©Ô∏é\nDet som omtales som nye verkt√∏y er vil som regel bety R, Python, Git, GitHub og Jupyterlab.‚Ü©Ô∏é"
  },
  {
    "objectID": "introduksjon.html",
    "href": "introduksjon.html",
    "title": "Introduksjon",
    "section": "",
    "text": "M√•let med dette kapitlet er √• gi en grunnleggende innf√∏ring i hva som legges i ordet Dapla. I tillegg gis en forklaring p√• hvorfor disse valgene er tatt."
  },
  {
    "objectID": "hva-er-dapla.html",
    "href": "hva-er-dapla.html",
    "title": "1¬† Hva er Dapla?",
    "section": "",
    "text": "Dapla st√•r for dataplattform, og er en skybasert l√∏sning for statistikkproduksjon og forskning."
  },
  {
    "objectID": "hvorfor-dapla.html",
    "href": "hvorfor-dapla.html",
    "title": "2¬† Hvorfor Dapla?",
    "section": "",
    "text": "Den nye skybaserte dataplattformen (Dapla) skal bli viktig for √• effektivisere arbeids-og produksjonsprosesser, den skal sikre effektiv lagring og gjenfinning av data og metadata, og st√∏tte opp under deling av data p√• tvers av statistikkomr√•der.\n\nKilde: Langtidsplan for SSB (2022-2024)\n\n\n\nM√•let med Dapla er √• tilby tjenester og verkt√∏y som lar statistikkprodusenter og forskere produsere resultater p√• en sikker og effektiv m√•te."
  },
  {
    "objectID": "arkitektur.html",
    "href": "arkitektur.html",
    "title": "3¬† Arkitektur",
    "section": "",
    "text": "Hvilke komponenter er plattformen bygd opp p√•? Forklart p√• lettest mulig m√•te."
  },
  {
    "objectID": "innlogging.html",
    "href": "innlogging.html",
    "title": "4¬† Innlogging",
    "section": "",
    "text": "Innlogging p√• Dapla er veldig enkelt. Dapla er en nettadresse som alle SSB-ere kan g√• inn p√• hvis de er logget p√• SSB sitt nettverk. √Ö v√¶re logget p√• SSB sitt nettverk betyr i denne sammenhengen at man er logget p√• med VPN, enten man er p√• kontoret eller p√• hjemmekontor. For √• gj√∏re det enda enklere har vi laget en fast snarvei til denne nettadressen p√• v√•rt intranett/Byr√•nettet(se Figure¬†4.1).\nMen samtidig som det er lett √• logge seg p√•, s√• er det noen kompliserende ting som fortjener en forklaring. Noe skyldes at vi mangler et klart spr√•k for √• definere bakkemilj√∏et og skymilj√∏et slik at alle skj√∏nner hva man snakker om. I denne boken definerer bakkemilj√∏et som stedet der man har drevet med statistikkproduksjon de siste ti√•rene. Skymilj√∏et er den nye dataplattformen Dapla p√• Google Cloud.\nDet som gj√∏r ting litt komplisert er at vi har 2 Jupyter-milj√∏er p√• b√•de bakke og sky. √Örsaken er at vi har ett test- og ett prod-omr√•de for hver, og det blir i alt 4 Jupyter-milj√∏er. Figure¬†4.2 viser dette.\nHver av disse milj√∏ene har sin egen nettadresse og sitt eget bruksomr√•de."
  },
  {
    "objectID": "innlogging.html#dapla",
    "href": "innlogging.html#dapla",
    "title": "4¬† Innlogging",
    "section": "4.1 Dapla",
    "text": "4.1 Dapla\nI de fleste tilfeller vil en statistikker eller forsker √∏nske √• logge seg inn i prod-milj√∏et. Det er her man skal kj√∏re koden sin i et produksjonsl√∏p som skal publiseres eller utvikles. I noen tilfeller hvor man ber om √• f√• tilgjengliggjort en ny tjeneste s√• vil denne f√∏rst rulles ut i testomr√•det som vi kaller staging-omr√•det. √Örsaken er at vi √∏nsker √• beskytte prod-milj√∏et fra software som potensielt √∏delegger for eksisterende funksjonalitet. Derfor ruller vi ut nye ting i staging f√∏rst. Av den grunn vil de fleste oppleve √• bli bedt om √• logge seg inn der for testing en eller annen gang. Under forklarer vi hvordan man g√•r frem for √• logge seg p√• de to ulike milj√∏ene p√• Dapla.\n\n4.1.1 Prod\nFor √• logge seg inn inn i prod-milj√∏et p√• Dapla kan man gj√∏re f√∏lgende:\n\nG√• inn p√• lenken https://jupyter.dapla.ssb.no/ i en Chrome-nettleser eller klikk p√• lenken p√• Byr√•nettet som vist i Figure¬†4.1.\nAlle i SSB har en Google Cloud-konto som m√• brukes n√•r man logger seg p√• Dapla. Brukernavnet i Google er det samme som din korte epost-adresse (f.eks. cth@ssb.no). Hvis du ikke allerede er logget inn i Google vil du f√• sp√∏rsm√•l om √• velge hvilken Google-konto som skal brukes (Figure¬†4.3). Logg inn med din Google-konto (ssb.no) og ditt AD-passord.\n\n\n\n\nFigure¬†4.3: Velg en Google-konto\n\n\n\nDeretter blir man spurt om man godtar at ssb.no (alts√• Dapla) kan bruke din Google Cloud-konto (Figure¬†4.4). Trykk Allow.\n\n\n\n\nFigure¬†4.4: Tillat at ssb.no f√•r bruke din Google Cloud-konto\n\n\n\nDeretter lander man p√• en side som lar deg avgj√∏re hvor mye maskinkraft som skal holdes av til deg (Figure¬†4.5). Det √∏verste alternativet er valgt som standard, og er tilstrekkelig for de fleste.\n\n\n\n\nFigure¬†4.5: Velg hvor mye maskinkraft du trenger\n\n\n\nVent til maskinen din starter opp (Figure¬†4.6). Oppstartstiden kan variere.\n\n\n\n\nFigure¬†4.6: Starter opp Jupyter\n\n\nEtter dette er man logget inn i et Jupyter-milj√∏ som kj√∏rer p√• en minimal Ubuntu-maskin. Hvis man er del av et Dapla-team f√•r man ogs√• tilgang til alt teamet har tilgang til.\n\n\n4.1.2 Staging\nInnlogging til staging-milj√∏et er identisk med innloggingen til prod-milj√∏et, med ett viktig unntak: nettadressen er n√• https://jupyter.dapla-staging.ssb.no/.\nLitt mer om hva som er tilgjenglig her kommer."
  },
  {
    "objectID": "innlogging.html#bakkemilj√∏et",
    "href": "innlogging.html#bakkemilj√∏et",
    "title": "4¬† Innlogging",
    "section": "4.2 Bakkemilj√∏et",
    "text": "4.2 Bakkemilj√∏et\nJupyter-milj√∏et p√• bakken bruker samme base-image1 for √• installere Jupyterlab, og er derfor identisk p√• mange m√•ter. Men innloggingen er ganske forskjellig.\n\n4.2.1 Prod\nDu logger deg inn p√• prod i bakkemilj√∏et p√• f√∏lgende m√•te:\n\nLogg deg inn p√• Citrix-Windows i bakkemilj√∏et. Det kan gj√∏res ved √• bruke lenken Citrix p√• Byr√•nettet, som ogs√• vises i Figure¬†4.1.\n√Öpne Chrome-nettleseren\nG√• inn p√• denne nettadressen: https://sl-jupyter-p.ssb.no/\nSkriv inn ditt brukernavn og passord som du bruker n√•r du logger deg p√• maskinen din hver morgen.\n\n\n\n4.2.2 Staging\nInnlogging til staging-milj√∏et er identisk med innloggingen til prod-milj√∏et, med ett viktig unntak: nettadressen er n√• https://sl-jupyter-t.ssb.no/."
  },
  {
    "objectID": "jupyterlab.html",
    "href": "jupyterlab.html",
    "title": "5¬† Jupyterlab",
    "section": "",
    "text": "Mer kommer."
  },
  {
    "objectID": "jupyterlab.html#terminalen",
    "href": "jupyterlab.html#terminalen",
    "title": "5¬† Jupyterlab",
    "section": "5.2 Terminalen",
    "text": "5.2 Terminalen\nM√• nevne operativsystemet og at noe programvare ligger installert her (git, jwsacruncher, quarto, ++)"
  },
  {
    "objectID": "jupyterlab.html#pakkeinstallasjoner",
    "href": "jupyterlab.html#pakkeinstallasjoner",
    "title": "5¬† Jupyterlab",
    "section": "5.3 Pakkeinstallasjoner",
    "text": "5.3 Pakkeinstallasjoner\nNoe er i base-image, noe b√∏r gj√∏res i virtuelle mil√∏er. Hvordan liste ut pakker som er pre-installert?"
  },
  {
    "objectID": "jupyterlab.html#extensions",
    "href": "jupyterlab.html#extensions",
    "title": "5¬† Jupyterlab",
    "section": "5.4 Extensions",
    "text": "5.4 Extensions\nJupyterlab er en samling extension. Kan bare installeres av admin. Sikkerhet. Hvilke extension har vi tilgjengeliggjort?"
  },
  {
    "objectID": "jupyterlab.html#tips-triks",
    "href": "jupyterlab.html#tips-triks",
    "title": "5¬† Jupyterlab",
    "section": "5.5 Tips & triks",
    "text": "5.5 Tips & triks\nSane defaults for Jupyterlab."
  },
  {
    "objectID": "dapla-team.html",
    "href": "dapla-team.html",
    "title": "Opprette Dapla-team",
    "section": "",
    "text": "Kapitlet som beskriver hvordan man logger seg inn p√• Dapla vil fungere uten at du m√• gj√∏re noen forberedelser. Er man koblet p√• SSB sitt nettverk s√• vil alle SSB-ansatte kunne g√• inn p√• plattformen og kode i Python og R. Men du har ikke tilgang til SSBs omr√•de for datalagring p√• plattformen. I praksis vil det si at man generere data med kode, men man ikke jobbe med skarpe data.\nFor √• f√• muligheten til √• jobbe skarpe data M√Ö du f√∏rst opprette et dapla-team. Dette er det f√∏rste naturlige steget √• ta n√•r man skal begynne √• jobbe med statistikkproduksjon p√• dapla. I dette kapitlet vil vi forklare det du trenger √• vite om det √• opprette og jobbe innenfor et team."
  },
  {
    "objectID": "hva-er-dapla-team.html",
    "href": "hva-er-dapla-team.html",
    "title": "7¬† Hva er Dapla-team?",
    "section": "",
    "text": "Hvert Dapla-team f√•r opprettet et prosjektomr√•de i Google Cloud Platform (GCP), som er SSBs leverand√∏r av skytjenester."
  },
  {
    "objectID": "opprette-dapla-team.html",
    "href": "opprette-dapla-team.html",
    "title": "8¬† Opprette Dapla-team",
    "section": "",
    "text": "G√• til Dapla Start for starte bestilling av et nytt Dapla-team.\n\n\n\nN√•r teamet er opprettet f√•r alle medlemmene tilgang til sitt eget prosjekt i Google Cloud Platform (GCP), som er SSBs leverand√∏r av skytjenester. Videre f√•r hvert prosjekt et sett med tjenester og tilganger som knyttes til teamet. Det opprettes ogs√• datalagringsomr√•der (kalt b√∏tter) som bare kan aksesseres av brukere som er med i teamets tilgangsgrupper.\nDapla-teamet vil ogs√• f√• sin egen gruppe i SSBs Active Directory slik at medlemskapet i gruppen kan administreres av Kundeservice."
  },
  {
    "objectID": "b√∏tter.html",
    "href": "b√∏tter.html",
    "title": "9¬† B√∏tter",
    "section": "",
    "text": "Hvert statistikkteam har sitt eget datalager som heter Google Cloud Storage (GCS). Disse er delt inn i flere datalagringsomr√•der som kalles b√∏tter. Dette kan sees p√• som et filsystem som kan organiseres med flere undermapper og filer. Navnet p√• b√∏ttene m√• v√¶re unikt p√• tvers av alle Dapla-team. Derfor blir disse opprettet etter en navnekonvensjon basert p√• kj√∏remilj√∏, teamnavn og hvilke data b√∏tta skal inneholde."
  },
  {
    "objectID": "b√∏tter.html#b√∏ttenavn-i-produksjonsmilj√∏et",
    "href": "b√∏tter.html#b√∏ttenavn-i-produksjonsmilj√∏et",
    "title": "9¬† B√∏tter",
    "section": "9.1 B√∏ttenavn i Produksjonsmilj√∏et",
    "text": "9.1 B√∏ttenavn i Produksjonsmilj√∏et\n\nssb-prod-teamnavn-data-kilde: Inneholder pseudonymiserte r√•data fra datakildene\nssb-prod-teamnavn-data-produkt: Inneholder data knyttet til statistikkproduktet, med f√∏lgende underkataloger:\n\ninndata\nklargjorte-data\nstatistikk\nutdata\n\nssb-prod-teamnavn-data-delt: Inneholder data knyttet til statistikkproduktet som kan deles med andre statistikkteam. Disse vil ha f√∏lgende underkataloger:\n\ninndata\nklargjorte-data\nstatistikk\nutdata\n\n\n\n\n\n\n\n\nUnderkatalogene inndata, klargjorte-data, statistikk og utdata gjenspeiler SSBs datatilstander. Se Datatilstander i SSB for mer informasjon."
  },
  {
    "objectID": "b√∏tter.html#andre-milj√∏er",
    "href": "b√∏tter.html#andre-milj√∏er",
    "title": "9¬† B√∏tter",
    "section": "9.2 Andre milj√∏er",
    "text": "9.2 Andre milj√∏er\nP√• samme m√•te som i produksjonsmilj√∏et finnes det b√∏tter for utviklings- og testform√•l:\n\nssb-staging-teamnavn-data-kilde\nssb-staging-teamnavn-data-produkt\nssb-staging-teamnavn-data-delt"
  },
  {
    "objectID": "b√∏tter.html#fellesb√∏tter",
    "href": "b√∏tter.html#fellesb√∏tter",
    "title": "9¬† B√∏tter",
    "section": "9.3 Fellesb√∏tter",
    "text": "9.3 Fellesb√∏tter\nI tillegg til disse finnes det noen b√∏tter med data som kan deles med alle i SSB og og som kan brukes til kurs og oppl√¶ring (bl.a. denne manualen). Disse b√∏ttene er:\n\nssb-prod-dapla-data-delt\nssb-staging-dapla-data-delt"
  },
  {
    "objectID": "gcc.html",
    "href": "gcc.html",
    "title": "10¬† Google Cloud Console",
    "section": "",
    "text": "Google Cloud Console er et web-basert grensesnitt for √• administrere ressurser og tjenester p√• Google Cloud. For √• bruke denne m√• man ha en Google-konto. Alle i SSB har en konto knyttet opp mot Google.\n\n\n\n\n\n\nG√• til Google Cloud Console og logg p√• med din SSB-bruker."
  },
  {
    "objectID": "overf√∏re-data.html",
    "href": "overf√∏re-data.html",
    "title": "11¬† Overf√∏re data",
    "section": "",
    "text": "For √• overf√∏re data mellom bakke og sky brukes Data Transfer, som er en tjeneste i Google Cloud Console. Denne tjenesten kan brukes til √• flytte data b√•de til og fra Linuxstammen og Dapla, og er tilgjengelig for teamets kildedataansvarlige.\nTeamets kildedataansvarlige vil v√¶re spesifisert som en del av √• opprette et Dapla-team."
  },
  {
    "objectID": "overf√∏re-data.html#forberedelser",
    "href": "overf√∏re-data.html#forberedelser",
    "title": "11¬† Overf√∏re data",
    "section": "11.1 Forberedelser",
    "text": "11.1 Forberedelser\n\n11.1.1 Logg inn i produksjonssonen\nLogg inn i produksjonssonen fra denne linken. Dette krever p√•logging med SSBs brukernavn og passord, samt tofaktorautentisering."
  },
  {
    "objectID": "overf√∏re-data.html#f√•-tilgang-til-linuxstammen",
    "href": "overf√∏re-data.html#f√•-tilgang-til-linuxstammen",
    "title": "11¬† Overf√∏re data",
    "section": "11.2 F√• tilgang til Linuxstammen",
    "text": "11.2 F√• tilgang til Linuxstammen\nFor √• f√• tilgang til Linuxstammen m√• du f√∏rst koble deg opp mot en Linux-maskin. Dette kan gj√∏res p√• f√∏lgende m√•te:\n\n√Öpne FileZilla\nVelg Fil > Tjeneroppsett fra menyen\nUnder Tjeneroppsett velg mappen Tjenere. Trykk p√• Ny Tjener og skriv inn et valgfritt navn.\nI feltene til h√∏yre m√• du fylle inn Protokoll. Velg SFTP - SSH File Transfer Protocol\nI feltet Vert m√• du skrive inn en adresse til en Linux-maskin som du har tilgang til (pr√∏v f.eks sl-sas-work-1.ssb.no ).\nI feltet Port skriv inn 22\nNedtrekkslisten Innloggingstype kan v√¶re satt til Normal\nI feltet Bruker skriv inn ditt 3-bokstavers brukernavn (samme som i eposten din)\nI feltet Passord skriver du inn ditt SSB-passord (fra AD)\nTrykk Koble til og OK. Du vil kanskje f√• opp set sp√∏rsm√•l med Ukjent vertsn√∏kkel: Tjenerens vertsn√∏kkel er ukjent etc. Kryss av Godta alltid denne tjeneren og trykk OK.\nVent p√• at FileZilla f√•r koblet opp og skriver ut meldingen Status: Connected to <machine-name>\nDu kan n√• navigere i filsystemet til Linuxstammen under Ekstern tjener\n\nFileZilla kan ogs√• brukes til √• kopiere filer mellom andre nettverksdisker og Linuxstammen.\n\n11.2.1 F√• tilgang til overf√∏ringsmapper\nMapper som brukes til √• overf√∏re data mellom produksjonssonen og Dapla ligger p√• Linuxstammen.\nHvert team vil ha mappene /ssb/cloud_sync/<teamnavn>/data/tilsky og /ssb/cloud_sync/<teamnavn>/data/frasky (erstatt <teamnavn> med navnet p√• ditt Dapla-team, f.eks ‚Äúkostra‚Äù, ‚Äúskatt-naering‚Äù, ‚Äúgro-grunnskole‚Äù, etc.).\nFiler som flyttes fra produksjonssonen til Dapla legges i mappen tilsky og filer som skal flyttes fra Dapla til produksjonssonen havner i mappen frasky. Det er viktig og huske at filer som flyttes enten opp til skyen eller ned til bakken vil bli slettet fra den respektive mappen n√•r overf√∏rselen er gjennomf√∏rt."
  },
  {
    "objectID": "overf√∏re-data.html#sette-opp-overf√∏ringsjobber",
    "href": "overf√∏re-data.html#sette-opp-overf√∏ringsjobber",
    "title": "11¬† Overf√∏re data",
    "section": "11.3 Sette opp overf√∏ringsjobber",
    "text": "11.3 Sette opp overf√∏ringsjobber\nEnten man skal overf√∏re filer opp til sky eller ned til bakken s√• bruker man den samme Data Transfer tjenesten. For √• f√• tilgang til denne m√• man f√∏rst logge seg inn i Google Cloud Console. Sjekk at du er logget inn med din SSB-konto (xxx@ssb.no).\n√òverst p√• siden, til h√∏yre for teksten Google Cloud finnes det en prosjektvelger, og her er det viktig √• velge korrekt Google prosjekt. Hvis du trykker p√• prosjektvelgeren vil det √•pnes opp et nytt vindu. Sjekk at det st√•r SSB.NO √∏verst i dette vinduet. Trykk deretter p√• fanen ALL for √• f√• opp alle tilgjengelige Google-prosjekter under organisasjonen ssb.no (Figure¬†11.1)\n\n\n\nFigure¬†11.1: Prosjektvelgeren i Google Cloud Console\n\n\nUnder ssb.no vil det ligge flere mapper. √Öpne mappen som heter production og let frem en undermappe som har navnet p√• ditt Dapla-team. Strukturen skal se slik ut:\n    ssb.no\n    ‚îú‚îÄ‚îÄ production\n        ‚îî‚îÄ‚îÄ <teamnavn>\n            ‚îú‚îÄ‚îÄ prod-<teamnavn>\n            ‚îî‚îÄ‚îÄ <teamnavn>-ts\nDet underste niv√•et (prod-<teamnavn> og <teamnavn>-ts) viser prosjektene, niv√•et i mellom er mapper, og toppniv√•et er organisasjonen (ssb.no). Prosjektet <teamnavn>-ts er et separat prosjekt som bare teamets kildedataansvarlige har tilgang til, og det er her tjenesten Data Transfer skal settes opp.\n\nVelg derfor prosjektet <teamnavn>-ts.\nI s√∏kefeltet til Google Cloud Console, skriv Data transfer og trykk p√• det valget som kommer opp.\nF√∏rste gang man kommer inn p√• siden til Transfer Services vil man bli vist en bl√• knapp med teksten Set Up Connection. N√•r du trykker p√• denne vil det dukke opp et nytt felt hvor du f√•r valget Create Pub-Sub Resources. Dette er noe som bare trengs √• gj√∏re √©n gang. Trykk p√• den bl√• CREATE knappen, og deretter trykk p√• Close lenger nede.\nI navigasjonsmenyen til venstre trykk Transfer jobs, og deretter trykk p√• + Create transfer job √∏verst p√• siden for √• opprette en ny overf√∏ringsjobb.\n\n\n11.3.1 Overf√∏ring fra Linuxstammen til Dapla\nF√∏lgende oppskrift tar utgangspunkt i siden Create a transfer job (Figure¬†11.2):\n\n\n\nFigure¬†11.2: Opprett overf√∏ringsjobb i Google Cloud Console\n\n\n\nVelg POSIX filesystem under ‚ÄúSource type‚Äù og Google cloud storage under ‚ÄúDestination type‚Äù (eller motsatt hvis overf√∏ringsjobben skal g√• fra Dapla til Linuxstammen). Trykk Next step\nNedtrekkslisten ‚ÄúAgent pool‚Äù skal normalt bare ha ett valg: transfer_service_default. Velg denne.\nI feltet ‚ÄúSource directory path‚Äù skal man kun skrive data/tilsky siden overf√∏ringsagenten kun har tilgang til mapper som ligger relativt plassert under /ssb/cloud_sync/<teamnavn>/. Trykk Next step\nVelg en destinasjon for overf√∏ringsjobben. Trykk p√• Browse og velg b√∏tten med navn som passer til ssb-prod-<teamnavn>-data-synk-opp. Vi anbefaler at du ogs√• oppretter en mappe inne i denne b√∏tten. Det gj√∏res ved √• trykke p√• mappeikonet med et +-tegn foran. Skriv inn et passende mappenavn og trykk Select i bunnen av siden. Trykk deretter Next step\nNeste steg ‚ÄúChoose how and when to run this job‚Äù er opp til brukeren √• bestemme. Hvis man f.eks. velger at Data Transfer skal overf√∏re data en gang i uken, vil den kun starte en overf√∏ring hvis det finnes nye data. Trykk Next step\nBeskriv overf√∏ringsjobben, f.eks: ‚ÄúFlytter data for  til sky.‚Äù. Resten av feltene er opp til brukeren √• bestemme. Standardverdiene er OK.\n\nTrykk til slutt p√• den bl√• Create-knappen. Du vil kunne se kj√∏rende jobber under menyen Transfer jobs.\nFor √• sjekke om data har blitt overf√∏rt, skriv inn cloud storage i s√∏kefeltet √∏verst p√• siden og trykk p√• det f√∏rste valget som kommer opp. Her vil du finne en oversikt over alle teamets b√∏tter, deriblant en med navn ssb-prod-<team-name>-data-synk-opp. N√•r overf√∏ringsjobben er ferdig vil du kunne finne igjen dataene i den mappen som ble definert i stegene overnfor.\n\n\n11.3.2 Overf√∏ring fra Dapla til Linuxstammen\nOverf√∏ringsjobben settes opp nesten identisk med Overf√∏ring fra Linuxstammen til Dapla med unntak av f√∏lgende:\n\nSteg 1: Velg Google cloud storage under ‚ÄúSource type‚Äù og POSIX filesystem under ‚ÄúDestination type‚Äù\nSteg 2: Velg b√∏tten ssb-prod-<team-name>-data-synk-ned\nStep 3: Velg transfer_service_default som ‚ÄúAgent pool‚Äù og skriv data/frasky inn i feltet for ‚ÄúDestination directory path‚Äù.\n\nFor √• se om data har blitt overf√∏rt til Linuxstammen m√• du n√• g√• til mappen /ssb/cloud_sync/<team-name>/data/frasky fra FileZilla.\nHusk: Du kan alltids g√• tilbake og se p√• tidligere fullf√∏rte jobber, og starte en overf√∏ringsjobb manuelt fra menyen Transfer jobs."
  },
  {
    "objectID": "administrasjon.html",
    "href": "administrasjon.html",
    "title": "15¬† Administrasjon av team",
    "section": "",
    "text": "Dapla-teamet vil ha sitt eget gruppenavn i SSBs Active Directory. Endringer i denne gruppen, slik som √• legge til eller fjerne medlemmer, gj√∏res ved √• sende en epost til Kundeservice."
  },
  {
    "objectID": "ssbproject.html",
    "href": "ssbproject.html",
    "title": "SSB-project",
    "section": "",
    "text": "versjonsh√•ndtere med Git\nopprette et GitHub-repo\nopprette et virtuelt milj√∏ som husker hvilke versjoner av pakker og programmeringsspr√•k du brukte\n\nI tillegg m√• alt dette konfigureres for hvordan SSB sine systemer er satt opp. Dette har vist seg √• v√¶re un√∏dvendig krevende for mange. Team Statistikktjenester har derfor utviklet et program som gj√∏r alt dette for deg p√• en enkel m√•te som heter ssb-project.\nVi mener at ssb-project er et naturlig sted √• starte n√•r man skal bygge opp koden i Python eller R. Det gjelder b√•de p√• bakken og p√• sky. I denne delen av boken forklarer vi f√∏rst hvordan du bruker ssb-project i det f√∏rste kapitlet. Siden programmet skjuler mye av kompleksiteten rundt dette, s√• bruker vi de andre kapitlene til √• forklare hvordan man ville satt opp dette uten hjelp av programmet. Dermed vil det v√¶re lett for SSB-ansatte √• skj√∏nne hva som gj√∏res og hvorfor det er n√∏dvendig."
  },
  {
    "objectID": "nytt-ssbproject.html",
    "href": "nytt-ssbproject.html",
    "title": "16¬† Nytt ssb-project",
    "section": "",
    "text": "I dette kapitlet forklarer vi hvordan du oppretter et ssb-project og hva det inneb√¶rer. ssb-project er et CLI1 for √• raskt komme i gang med koding p√• Dapla, hvor en del SSB-spesifikke beste-prakiser er ivaretatt. Kode som naturlig h√∏rer sammen, f.eks. koden til et produksjonsl√∏p for en statistikk, er m√•lgruppen for dette programmet. Kort fortalt kan du kj√∏re denne kommandoen i en terminal\nssb-project create stat-testprod\nog du vil f√• en mappe som heter stat-testprod med f√∏lgende innhold:\nI tillegg lar ssb-project deg opprette et GitHub-repo hvis du √∏nsker. Les mer om hvordan du kan ta i bruk dette verkt√∏yet under."
  },
  {
    "objectID": "nytt-ssbproject.html#forberedelser",
    "href": "nytt-ssbproject.html#forberedelser",
    "title": "16¬† Nytt ssb-project",
    "section": "16.1 Forberedelser",
    "text": "16.1 Forberedelser\nF√∏r du kan ta i bruk ssb-project s√• er det et par ting som m√• v√¶re p√• plass:\n\nDu m√• ha opprettet en git-bruker og git-epost lokalt der du skal kalle p√• programmet (les mer om hvordan her).\nHvis du √∏nsker at ssb-project ogs√• skal opprette et GitHub-repo for deg m√• du ogs√• f√∏lgende v√¶re p√• plass:\n\nDu m√• ha en GitHub-bruker (les hvordan her)\nSkru p√• 2-faktor autentifisering for GitHub-brukeren din (les hvordan her)\nV√¶re koblet mot SSBs organisasjon statisticsnorway p√• GitHub (les hvordan her)\nOpprette Personal Access Token (PAT) og godkjenne det for bruk mot statisticsnorway (les hvordan her)\n\n\nHvis du har alt dette p√• plass s√• kan du bare fortsette √• f√∏lge de neste kapitlene."
  },
  {
    "objectID": "nytt-ssbproject.html#opprett-ssb-project",
    "href": "nytt-ssbproject.html#opprett-ssb-project",
    "title": "16¬† Nytt ssb-project",
    "section": "16.2 Opprett ssb-project",
    "text": "16.2 Opprett ssb-project\n\n\n\n\n\n\nHar du Github bruker? Noe funksjonalitet i ssb-project krever det. Finn ut hvordan ved √• lese forrige kapitel.\n\n\n\nssb-project lar deg opprette en prosjekt-mappe med og uten GitHub-repo. La oss ta for oss hver av alternativene.\n\n16.2.1 Uten GitHub-repo\nFor √• opprette et nytt ssb-project uten GitHub-repo gj√∏r du f√∏lgende:\n\n√Öpne en terminal. De fleste vil gj√∏re dette i Jupyterlab p√• bakke eller sky og da kan de bare trykke p√• det bl√• ‚ûï-tegnet i Jupyterlab og velge Terminal.\nF√∏r vi kj√∏rer programmet m√• vi v√¶re obs p√• at ssb-project vil opprette en ny mappe der vi st√•r. G√• derfor til den mappen du √∏nsker √• ha den nye prosjektmappen. For √• opprette et prosjekt som heter stat-testprod s√• skriver du f√∏lgende i terminalen:\n\nssb-project create stat-testprod\n\n\nHvis du stod i hjemmemappen din p√• n√•r du skrev inn kommandoen over i terminalen, s√• har du f√•tt mappestrukturen som vises i Figure¬†16.1. 2. Den inneholder f√∏lgende :\n\n.git-mappe som blir opprettet for √• versjonsh√•ndtere med Git.\nsrc-mappe som skal inneholde all koden som utgj√∏r produksjonsl√∏pet.\ntests-mappe som inneholder tester du skriver for koden din.\nLICENCE-fil som skal benyttes for public-repos i SSB.\npoetry.lock-fil som inneholder alle versjoner av Python-pakker som blir brukt.\nREADME.md-fil som brukes for tekstlig innhold p√• GitHub-siden for prosjektet.\n\n\n\n\n\n\nFigure¬†16.1: Mappen som ble opprettet av ssb-project.\n\n\n\n\n\n\n16.2.2 Med Github-repo\nOver s√• opprettet vi et ssb-project uten √• opprette et GitHub-repo. Hvis du √∏nsker √• opprette et GitHub-repo ogs√• m√• du endre kommandoen over til:\nssb-project create stat-testprod --github --github-token='blablabla'\nKommandoen over oppretter en mappestruktur slik vi s√• tidligere, men ogs√• et ssb-project som heter stat-testprod med et GitHub-repo med samme navn. Som du ser s√• m√• vi da sende med opsjonen --github og PAT med opsjonen --github-token='blablabla'. Repoet i GitHub ser da ut som i Figure¬†16.2.\n\n\n\nFigure¬†16.2: GitHub-repo som er opprettet av ssb-project\n\n\n\n\n\n\n\n\nN√•r du har opprettet et nytt ssb-project, eller bygget et eksisterende prosjekt, s√• kan det ta rundt 30 sekunder f√∏r kernelen viser seg i Jupterlab-launcher. V√¶r t√•lmodig!"
  },
  {
    "objectID": "nytt-ssbproject.html#installere-pakker",
    "href": "nytt-ssbproject.html#installere-pakker",
    "title": "16¬† Nytt ssb-project",
    "section": "16.3 Installere pakker",
    "text": "16.3 Installere pakker\nFlytte fra kapittel 20 til hit. Fortelle at lock-file oppdateres automatisk ved installasjon. Vil lock-.file oppdateres selv om du ikke bruker pakken? Test. PyPI benyttes. Kun Python forel√∏pig."
  },
  {
    "objectID": "nytt-ssbproject.html#push-til-github",
    "href": "nytt-ssbproject.html#push-til-github",
    "title": "16¬† Nytt ssb-project",
    "section": "16.4 Push til GitHub",
    "text": "16.4 Push til GitHub\nKort beskrivelse av hvordan man pusher til GitHub."
  },
  {
    "objectID": "nytt-ssbproject.html#bygg-eksisterende-ssb-project",
    "href": "nytt-ssbproject.html#bygg-eksisterende-ssb-project",
    "title": "16¬† Nytt ssb-project",
    "section": "16.5 Bygg eksisterende ssb-project",
    "text": "16.5 Bygg eksisterende ssb-project\nN√•r vi skal samarbeide med andre om kode s√• gj√∏r vi dette via GitHub. N√•r du pusher koden din til GitHub, s√• kan samarbeidspartnere pulle ned koden og jobbe videre med den. Men n√•r de henter ned koden s√• vil de bare hente ned selve koden, ikke pakker og Python-versjonen som ble brukt. De m√• installere alt som du hadde installert. I tillegg trenger de en kernel hvis de skal jobbe i Jupyterlab. ssb-project gj√∏r det sv√¶rt enkelt √• bygge opp det du trenger, siden det virtuelle milj√∏et har all informasjon om hva som trengs. For √• bygge opp det samme mil√∏et s√• gj√∏r du f√∏lgende:\n\nKlone repoet med git clone https://github.com/statisticsnorway/<prosjektnavn>\nG√• til mappen med cd <prosjektnavn>\nSkape et virtuelt milj√∏ og installere en tilsvarende Jupyter kernel med ssb-project build"
  },
  {
    "objectID": "nytt-ssbproject.html#rydd-opp-etter-deg",
    "href": "nytt-ssbproject.html#rydd-opp-etter-deg",
    "title": "16¬† Nytt ssb-project",
    "section": "16.6 Rydd opp etter deg",
    "text": "16.6 Rydd opp etter deg\n\n16.6.1 Lokalt\nHvis man jobber med flere prosjekter s√• kan det fort bli mange Jupyter kerneler hengende igjen. Derfor er det ogs√• mulighet √• kj√∏re ssb-project clean stat-testprod som sletter Jupyter-kernelen og de installerte pakkene i prosjektet.\n\n\n16.6.2 Arkiver GitHub-repo\nMer kommer."
  },
  {
    "objectID": "nytt-ssbproject.html#hva-med-r",
    "href": "nytt-ssbproject.html#hva-med-r",
    "title": "16¬† Nytt ssb-project",
    "section": "16.7 Hva med R?",
    "text": "16.7 Hva med R?\nBeskrive hvordan man kan lage virtuelle milj√∏er og installere med R. Flytte fra kap.20 hit"
  },
  {
    "objectID": "git-github.html",
    "href": "git-github.html",
    "title": "17¬† Git og Github",
    "section": "",
    "text": "I SSB anbefales det man versjonh√•ndterer koden sin med Git og deler koden via GitHub. For √• l√¶re seg √• bruke disse verkt√∏yene p√• en god m√•te er det derfor viktig √• forst√• forskjellen mellom Git og Github. Helt overordnet er forskjellen f√∏lgende:\nAv definisjonene over s√• skj√∏nner vi at det er Git som gir oss all funksjonalitet for √• lagre versjoner av koden v√•r. GitHub er mer som et valg av mappesystem. Men m√•ten kodemilj√∏ene v√•re er satt opp p√• Dapla s√• har vi ingen fellesmappe som alle kan kj√∏re koden fra. Man utvikler kode i sin egen hjemmemappe, som bare du har tilgang til, og n√•r du skal samarbeide med andre, s√• m√• du sende koden til GitHub. De du samarbeider med m√• deretter hente ned denne koden f√∏r de kan kj√∏re den.\nI dette kapitlet ser vi n√¶rmere p√• Git og Github og hvordan de er implementert i SSB. Selv om SSB har laget programmet ssb-project for √• gj√∏re det lettere √• bl.a. forholde seg til Git og GitHub, s√• vil vi dette kapitlet forklare n√¶rmere hvordan det funker uten dette hjelpemiddelet. Forh√•pentligvis vil det gj√∏re det lettere √• h√•ndtere mer kompliserte situasjoner som oppst√•r i arbeidshverdagen som statistikker."
  },
  {
    "objectID": "git-github.html#git",
    "href": "git-github.html#git",
    "title": "17¬† Git og Github",
    "section": "17.1 Git",
    "text": "17.1 Git\nGit er terminalprogram som installert p√• maskinen du jobber. Hvis man ikke liker √• bruke terminalen finnes det mange pek-og-klikk versjoner av Git, blant annet i Jupyterlab, SAS EG og RStudio. Men typisk vil det en eller annen gang oppst√• situasjoner der det ikke finnes l√∏sninger i pek-og-klikk versjonen, og man m√• ordne opp i terminalen. Av den grunn velger vi her √• fokusere p√• hvordan Git fungerer fra terminalen. Vi vil ogs√• fokusere p√• hvordan Git fungerer fra terminalen i Jupyterlab p√• Dapla.\n\n17.1.1 Hva er Git?\nKommer snart. Kort forklaring med lenke til mer utfyllende svar.\n\n\n17.1.2 Oppsett av Git\nMer kommer.\n\n17.1.2.1 Minimal Git-konfigurasjon\nFor √• brukt Git er det strengt tatt to ting som m√• konfigurere:\n\nBrukernavn\nE-post\n\nDenne informasjonen brukes av Git hver gang du sjekker inn en endring i koden slik at man kan vite hvem som gjorde endringen senere. Dette m√• settes √©n gang per milj√∏ hvor du skal jobbe med Git. Hvis du f.eks. jobber i Jupyterlab p√• Dapla s√• kan du √•pne en terminal og skrive f√∏lgende for √• lagre ditt brukernavn:\ngit config --global user.name \"Ola Nordmann\"\nFor √• sette e-post gj√∏r du veldig lignende:\ngit config --global user.email olanordamnn@ssb.no\nN√•r du har kj√∏rt disse to kommandoene s√• kan du bruke Git. Informasjonen du la til over brukes ikke til noe annet enn √• fortelle de du samarbeider med om at du har gjort endringer p√• koden. Den er verken knyttet opp mot din SSB-bruker eller din GitHub-bruker.\n\n\n\n17.1.3 Git og Notebooks\nKommer snart. Jupytext og nbsripout. json.\n\n\n17.1.4 Vanlige Git-operasjoner\nKommer snart. clone, add, commit, push, pull, merge, revert, etc."
  },
  {
    "objectID": "git-github.html#github",
    "href": "git-github.html#github",
    "title": "17¬† Git og Github",
    "section": "17.2 GitHub",
    "text": "17.2 GitHub\n\n\n17.2.1 Opprett GitHub-bruker\nDette kapitlet er bare relevant hvis man ikke har en GitHub-brukerkonto fra f√∏r. For √• bruke ssb-project-programmet til √• generere et remote repo p√• GitHub m√• du ha en konto. Derfor starter vi med √• gj√∏re dette. Det er en engangsjobb og du trenger aldri gj√∏re det igjen.\n\n\n\n\n\n\nSSB har valgt √• ikke sette opp SSB-brukerne til de ansatte som GitHub-brukere. En viktig √•rsak er at er en GitHub-konto ofte regnes som en del av den ansattes CV. For de som aldri har brukt GitHub f√∏r kan det virke fremmed, men det er nok en fordel p√• sikt n√•r alle blir godt kjent med denne arbeidsformen.\n\n\n\nSlik gj√∏r du det:\n\nG√• til https://github.com/\nTrykk Sign up √∏verst i h√∏yre hj√∏rne\nSvar p√• sp√∏rsm√•lene du blir stilt.\n\nHusk at du lager en personlig konto uavhengig av SSB. Brukernavnet kan v√¶re noe annet enn brukernavnet ditt i SSB. I neste steg skal vi knytte denne kontoen til din SSB-bruker.\n\n\n17.2.2 To-faktor autentifisering\nHvis du har fullf√∏rt forrige steg s√• har du n√• en GitHub-konto. Hvis du st√•r p√• din profil-side s√• ser den slik ut:\n\nDet neste vi m√• gj√∏re er √• aktivere 2-faktor autentifisering, siden det er dette som benyttes i SSB. Hvis du st√•r p√• siden i bildet over, s√• gj√∏r du f√∏lgende for √• aktivere 2-faktor autentifisering mot GitHub:\n\n\n\nTrykk p√• den lille pilen √∏verst til h√∏yre og velg Settings(se bilde til h√∏yre).\nDeretter velger du Password and authentification i menyen til venstre.\n\n\n\n\n\n\n\nUnder Two-factor authentication trykker du p√• Add. Da f√•r du opp f√∏lgende bilde:\n\n\n\n\n\nStrekkoden over skal skannes i din Microsoft Authenticator-app p√• mobilen. √Öpne appen, trykk p√• Bekreftede ID-er, og til slutt trykk p√• Skann QR-kode. Deretter skanner du QR-koden fra punkt 3.\nN√•r koden er skannet har du f√•tt opp f√∏lgende bilde p√• appens hovedside (se bilde til h√∏yre). Skriv inn den 6-siffer koden p√• GitHub-siden med QR-koden.\nTil slutt lagrer du Recovery-codes et trygt sted.\n\n\n\n\n\n\nN√• har vi aktivert 2-faktor autentifisering for GitHub og er klare til √• knytte v√•r personlige konto til v√•r SSB-bruker p√• SSBs ‚ÄúGithub organisation‚Äù statisticsnorway.\n\n\n17.2.3 Koble deg til SSB\nI forrige steg aktiverte vi 2-faktor autentifisering for GitHub. Det neste vi m√• gj√∏re er √• bruke denne autentiseringen til √• koble oss til SSB sin organisasjon statisticsnorway. Det er dette som gj√∏r at vi kan jobbe med SSB-kode som ligger lagret p√• GitHub.\n\nG√• til profilsiden din og velg Settings slik du gjorde i punkt 1 i forrige delkapitel.\nTrykk deretter p√• Organizations i menyen til venstre.\nTrykk deretter p√• New organization.\nS√∏k etter statisticsnorway.\n\n\n\n17.2.4 Personal Access Token (PAT)\nN√•r vi skal jobbe med SSB-kode som ligger lagret hos statistcsnorway p√• GitHub, s√• m√• vi autentisere oss. M√•ten vi gj√∏re det p√• er ved √• generere et Personal Access Token (ofte forkortet PAT) som vi oppgir n√•r vi vil hente eller oppdatere kode p√• GitHub. Da sender vi med PAT for √• autentisere oss for GitHub.\n\n17.2.4.1 Opprette PAT\nFor √• lage en PAT som er godkjent mot statisticsnorway s√• gj√∏r man f√∏lgende:\n\nG√• til din profilside p√• GitHub og √•pne Settings slik som ble vist Section¬†17.2.2.\nVelg Developer Settings i menyen til venstre.\nI menyen til venstre velger du Personal Access Token, og deretter Tokens (classic).\nUnder Note kan du gi PAT‚Äôen et navn. Velg et navn som er intuitivt for deg. Hvis du skal bruke PAT til √• jobbe mot Dapla, s√• ville jeg ganske enkelt kalt den dapla. Hvis du skal bruke den mot bakkemilj√∏et ville jeg kalt den prodsone eller noe annet som gj√∏r det lett for det skj√∏nne innholdet i ettertid.\nUnder Expiration velger du hvor lang tid som skal g√• f√∏r PAT blir ugyldig. Dette er en avvening mellom sikkerhet og hva som er praktisk. En grei melloml√∏sning kan v√¶re √• velge 3 m√•neder. N√•r PAT utl√∏per m√• du gjenta stegene i dette kapitlet.\nUnder Select scopes velger du Repo (se bilde under).\n\n\n\nTrykk p√• Generate token nederst p√• siden og du f√•r opp noe som ser ut som dette:\n\n\n\nKopier deretter PAT til en midlertidig fil. Grunnen er at du aldri vil se det igjen her etter at vi har gjennomf√∏rt neste steg.\nDeretter trykker du p√• Configure SSO og velger Authorize ved siden statisticsnorway. Svar deretter p√• sp√∏rsm√•lene som dukker opp.\n\n\nVi har n√• opprettet en PAT som er godkjent for bruk mot SSB sin kode p√• GitHub. Det betyr at hvis vi vil jobbe med Git p√• SSB sine maskiner i sky eller p√• bakken, s√• m√• vi sendte med dette tokenet for √• f√• lov til √• jobbe med koden som ligger p√• statisticsnorway p√• GitHub.\n\n\n17.2.4.2 Lagre PAT\nDet er ganske upraktisk √• m√•tte sende med tokenet hver gang vi skal jobbe med GitHub. Vi b√∏r derfor lagre det lokalt der vi jobber, slik at Git automatisk finner det. Det finnes mange m√•ter √• gj√∏re dette p√• og det er ikke bestemt hva som skal v√¶re beste-praksis i SSB. Men en m√•te √• gj√∏re det er via en .netrc-fil. Vi oppretter da en fil som heter .netrc p√• v√•rt hjemmeomr√•de, og legger f√∏lgende informasjon p√• en (hvilken som helst) linje i filen:\nmachine github.com login <github-bruker> password <Personal Access Token>\nGitHub-bruker er da din personlige bruker og IKKE brukernavnet ditt i SSB. Personal Access Token er det vi lagde\nEn veldig enkel m√•te √• lagre dette er som f√∏lger. Anta at min personlige GitHub-bruker er SSB-Chad og at min Personal Access Token er blablabla. Da kan jeg gj√∏re f√∏lgende for √• lagre det i .netrc:\n\nG√• inn i Jupyterlab og √•pne en Python-notebook.\nI den f√∏rste kodecellen skriver du: !echo \"machine github.com login SSB-Chad password blablabla\" >> ~/.netrc\n\nAlternativt kan du droppe det utropstegnet og kj√∏re det direkte i en terminal. Det vil gi samme resultat. Koden over legger til en linje med teksten machine github.com login SSB-Chad password blablabla i en .netrc-fil p√• din hjemmeomr√•det, uanvhengig av om du har en fra f√∏r eller ikke. Hvis du har en fil fra f√∏r som allerede har et token fra GitHub, ville jeg nok slettet det f√∏r jeg legger en et nytt token.\nHver gang du jobber mot GitHub vil Git sjekke om informasjon om autentifisering ligger i denne filen, og bruke den hvis den ligger der.\n\n\n17.2.4.3 Oppdater PAT\nI eksempelet over lagde vi en PAT som var gyldig i 90 dager. Dermed vil du ikke kunne jobbe mot GitHub med dette tokenet etter 90 dager. For √• oppdatere tokenet gj√∏r du f√∏lgende:\n\nLag et nytt PAT ved √• repetere Section¬†17.2.4.1.\nI milj√∏et der du skal jobbe med Git og GitHub g√•r du inn i din .netrc og bytter ut token med det nye.\n\nOg med det er du klar til √• jobbe mot statisticsnorway p√• GitHub."
  },
  {
    "objectID": "virtual-env.html",
    "href": "virtual-env.html",
    "title": "18¬† Virtuelle milj√∏er",
    "section": "",
    "text": "Et python viretuelt milj√∏ inneholder en spesifikk versjon av python og et sett med pakker. Pakkene er kun tilgjengelige n√•r det viretuelt milj√∏et er aktivert. Dette gj√∏r at man ung√•r avhengighetskonflikter p√• tvers av prosjekter.\nSe her for mer informasjon om viretuelle milj√∏er.\n\n\nDet er anbefalt √• benytte verkt√∏yet poetry for √• administrere prosjekter og deres viretuelle milj√∏.\nPoetry setter opp virtuelt milj√∏, gj√∏r det enkelt √• oppdatere avhengigheter, sette versjons begrensninger og reprodusere prosjektet.\nPoetry gj√∏r dette ved √• lagre avhengigheters eksakte versjon i prosjektets ‚Äúpoetry.lock‚Äù. Og eventuelle begrensninger i ‚Äúpyproject.toml‚Äù. Dette gj√∏r det enkelt for andre √• bygge prosjektet med akkurat de samme pakkene og begrensningene."
  },
  {
    "objectID": "virtual-env.html#r",
    "href": "virtual-env.html#r",
    "title": "18¬† Virtuelle milj√∏er",
    "section": "18.2 R",
    "text": "18.2 R"
  },
  {
    "objectID": "pakke-install.html",
    "href": "pakke-install.html",
    "title": "20¬† Installere pakker",
    "section": "",
    "text": "Installering av pakker er kun er mulig I et virtuelt milj√∏. Det er anbefalt √• benytte poetry til dette. Eksemplene videre tar derfor utgangspunkt i et poetry prosjekt.\nDet er mulig √• installere pakker med pip. Pakker kan installeres som normalt, hvis man har satt opp og aktivert et virtuelt milj√∏.\n\n\nDette eksemplet viser hvordan man setter oppe et enkelt poetry prosjekt kalt test, hvis man √∏nsker √• benytte et annet prosjektnavn m√• man endre dette i hver av kommandoene.\nSett opp prosjektet:\npoetry new test\nNaviger inn i prosjektmappen:\ncd test\nBruk poetry install for √• bygge prosjektet:\npoetry install\nHvis man f√•r en tilbakemelding som denne er prosjektet satt opp korrekt:\nCreating virtualenv test-EojoH6Zm-py3.10 in /home/jovyan/.cache/pypoetry/virtualenvs \nUpdating dependencies \nResolving dependencies... (0.1s) \n\nWriting lock file \n\n\n\nFor √• legge til pakker i et prosjekt benyttes kommandoen poetry add.\nSkal man legge til pakken ‚Äúpendulum‚Äù vil det se slik ut:\npoetry add pendulum\nPoetry tilbyr m√•ter √• sette versjonsbegrensninger for pakker som legges til i et prosjekt, dette kan man lese mer om her.\n\n\n\nFor √• fjerne pakker fra et prosjekt benytter man poetry remove.\nHvis man √∏nsker √• fjerne ‚Äúpendulum‚Äù fra et prosjekt vil kommandoen se slik ut:\npoetry remove pendulum\n\n\n\nFor √• oppdatere pakker i et prosjekt benytter man kommandoen poetry update.\nSkal man oppdatere pakken ‚Äúpendulum‚Äù bruker man:\npoetry update pendulum\nSkal man oppdatre alle pakken i et prosjekt benytter man:\npoetry update \n\n\n\nFor √• kunne benytte det virtuelle milj√∏et i en notebook m√• man sette opp en kernel. Kernel burde gis samme navn som prosjektet.\nF√∏rst legger man til ipykernel:\npoetry add ipykernel\nS√• opprettes kernel med:\npoetry run python -m ipykernel install --user --name test\nEtter dette er kernelen test opprettet og kan velges for √• benytte milj√∏et i en notebook.\n\n\n\nFor √• fjerne en kernel med navn test bruker man:\njupyter kernelspec remove test\nDu vil bli spurt om √• bekrefte, trykk y hvis man √∏nsker √• slette:\nKernel specs to remove:\n  test                    /home/jovyan/.local/share/jupyter/kernels/test\nRemove 1 kernel specs [y/N]: y\nEtter dette er kernelen fjernet.\n\n\n\nHvem som helst kan legge til pakker p√• PyPi, det betyr at de i verstefall, kan inneholde skadelig kode. Her er en list med viktige tiltak som minimere risikoen:\n\nF√∏r man installerer pakker b√∏r man alltid s√∏ke de opp p√• https://pypi.org. Det er anbefalt √• klippe og lime inn pakkenavnet n√•r man skal legge det til i et prosjekt.\nEr det et popul√¶rt/velkjent prosjekt? Hvor mange stjerner og forks har repoet?"
  },
  {
    "objectID": "pakke-install.html#r",
    "href": "pakke-install.html#r",
    "title": "20¬† Installere pakker",
    "section": "20.2 R",
    "text": "20.2 R\nInstallering av pakker for R-milj√∏et i Jupyterlab er forel√∏pig ikke en del av ssb-project. Men vi kan bruke renv. Mer kommer.\n\n20.2.1 Installering\nFor √• installere dine egne R-pakker m√• du opprette et virtuelt milj√∏ med renv. G√• inn i Jupyterlab og √•pne R-notebook. Deretter skriver du inn f√∏lgende i kodecelle:\nrenv::init()\nDenne kommandoer aktiverer et virtuelt milj√∏ i mappen du st√•r i. Rent praktisk vil det si at du fikk f√∏lgende filer/mapper i mappen din:\nrenv.lock\nEn fil som inneholder versjoner av alle pakker du benytter i koden din.\nrenv\nMappe som inneholder alle pakkene du installerer.\nN√• som vi har et virtuelle milj√∏et p√• plass kan vi installere en R-pakke. Du kan gj√∏re dette fra b√•de terminalen og fra en Notebook. Vi anbefaler p√• gj√∏re det fra terminalen fordi du da f√•r tilbakemelding p√• om installeringen gikk bra heller ikke. For √• installere i terminalen gj√∏r du f√∏lgende:\n\n√Öpne en terminal i Jupyterlab\nSt√• i mappen der du aktiverte det virtuelle milj√∏et\nSkriv in R og trykk enter.\n\nDet vi n√• har gjort er √• √•pne R fra terminalen slik at vi kan skrive R-kode direkte i terminalen. Det omtales ofte som en R Console. N√• kan du skrive inn en vanlig kommando for √• installere R-pakker:\ninstall.packages(\"PxWebApiData\")\nOver installerte vi pakken PxWebApiData som er en pakke skrevet i SSB for √• hente ut data fra v√•r statistikkbank. La oss bruke pakken i koden v√•r med ved √• skrive f√∏lgende i kodecelle i Notebooken v√•r:\nlibrary(PxWebApiData)\nApiData(\"https://data.ssb.no/api/v0/en/table/04861\", \n        Region = c(\"1103\", \"0301\"), ContentsCode = \"Bosatte\", Tid = c(1, 2, -2, -1))\nN√•r vi n√• har brukt PxWebApiData i koden v√•r s√• kan vi kj√∏re en kommando som legger til den pakken i renv.lock. Men f√∏r vi kan gj√∏re det m√• vi v√¶re obs p√• at renv ikke klarer √• gjenkjenne pakker som er i bruk Notebooks (ipynb-filer). Det er veldig upraktisk, men noe vi m√• forholde oss til n√•r vi jobber med renv i Jupyterlab. En mulig l√∏sning for dette er √• bruke Jupytext til √• synkronisere en ipynb-fil med en Rmd-fil. renv kjenner igjen b√•de R- og Rmd-filer. For √• synkronisere filene gj√∏r du f√∏lgende:\n\nTrykk Ctrl+Shift C\nSkriv inn Pair i s√∏kefeltet som dukker opp\nVelg Pair Notebook with R Markdown\n\nHvis du n√• endrer en av filene s√• vil den andre oppdatere seg, og renv vil kunne oppdage om du bruker en pakke i koden din. Men for √• trigge renv til √• lete etter pakker som er i bruk s√• m√• du skrive f√∏lgende kode i Notebooken eller R Console:\nrenv::snapshot()\nKikker du n√• inne i renv.lock-filen s√• ser du n√• at verjsonen av PxWebApiData er lagt til. I bildet under ser du hvordan et arbeidsmilj√∏ typisk kan se ut n√•r man installerer sine egne pakker.\n\n\n\n20.2.2 Avinstallering\n\n\n20.2.3 Oppgradere pakker"
  },
  {
    "objectID": "samarbeid.html",
    "href": "samarbeid.html",
    "title": "21¬† Samarbeid",
    "section": "",
    "text": "Noen har opprettet et ssb-project og pushet til Github. Hvordan skal kollegaer g√• frem for √• bidra inn i koden?"
  },
  {
    "objectID": "pakke-install-bakken.html",
    "href": "pakke-install-bakken.html",
    "title": "23¬† Installere pakker",
    "section": "",
    "text": "Installering av pakker i Jupyter milj√∏er p√• bakken (f.eks https://sl-jupyter-p.ssb.no) foreg√•r stort sett helt lik som p√• Dapla. Det er √©n viktig forskjell, og det er at installasjon skjer via en proxy som heter Nexus.\n\n\nPip er ferdig konfigurert for bruk av Nexus og kan kj√∏res som beskrevet for Dapla\n\n\n\nHvis man bruker Poetry for h√•ndtering av pakker i et prosjekt, s√• m√• man kj√∏re f√∏lgende kommando i prosjekt-mappe etter prosjektet er opprettet.\npoetry source add --default nexus `echo $PIP_INDEX_URL`\nDa f√•r man installere pakker som vanlig f.eks\npoetry add matplotlib\n\n\n\n\n\n\nHvis man fors√∏ker √• installere prosjektet i et annet milj√∏ (f.eks Dapla), s√• m√• man fjerner nexus kilden ved √• kj√∏re\npoetry source remove nexus"
  },
  {
    "objectID": "pakke-install-bakken.html#r",
    "href": "pakke-install-bakken.html#r",
    "title": "23¬† Installere pakker",
    "section": "23.2 R",
    "text": "23.2 R\nProsessen med √• installere pakker for R p√• bakken er veldig lik slik det gj√∏res p√• Dapla. Under beskriver hvordan det avviker fra prosedyren p√• Dapla.\n\n23.2.1 Installering\nVi installerer fra en proxy-server p√• bakken, og derfor m√• vi spesifisere denne adressen manuelt f√∏r vi kan installere R-pakker.\nrepos <- c(CRAN = \"https://nexus.ssb.no/repository/CRAN/\")\noptions(repos = repos)\nDeretter kan du initiere det virtuelle milj√∏et med f√∏lgende kommando:\nrenv::init()\nResten er likt som det som er forklart for Dapla.\n\n\n23.2.2 Avinstallering\n\n\n23.2.3 Oppgradere pakker"
  },
  {
    "objectID": "lese-data-bakken.html",
    "href": "lese-data-bakken.html",
    "title": "24¬† Lese inn filer",
    "section": "",
    "text": "Mer kommer."
  },
  {
    "objectID": "lese-data-bakken.html#sas7bdat",
    "href": "lese-data-bakken.html#sas7bdat",
    "title": "24¬† Lese inn filer",
    "section": "24.1 sas7bdat",
    "text": "24.1 sas7bdat"
  },
  {
    "objectID": "lese-data-bakken.html#oracle",
    "href": "lese-data-bakken.html#oracle",
    "title": "24¬† Lese inn filer",
    "section": "24.2 Oracle",
    "text": "24.2 Oracle"
  },
  {
    "objectID": "lese-data-bakken.html#fame",
    "href": "lese-data-bakken.html#fame",
    "title": "24¬† Lese inn filer",
    "section": "24.3 Fame",
    "text": "24.3 Fame"
  },
  {
    "objectID": "lese-data-bakken.html#tekstfiler",
    "href": "lese-data-bakken.html#tekstfiler",
    "title": "24¬† Lese inn filer",
    "section": "24.4 Tekstfiler",
    "text": "24.4 Tekstfiler"
  },
  {
    "objectID": "lese-data-bakken.html#parquet",
    "href": "lese-data-bakken.html#parquet",
    "title": "24¬† Lese inn filer",
    "section": "24.5 Parquet",
    "text": "24.5 Parquet"
  },
  {
    "objectID": "lese-data.html",
    "href": "lese-data.html",
    "title": "25¬† Lese filer fra b√∏tte",
    "section": "",
    "text": "Skal man lese fra en b√∏tte m√• man autentisere seg. For √• gj√∏re dette kan man benytte pakken dapla-toolbelt."
  },
  {
    "objectID": "lese-data.html#eksempler",
    "href": "lese-data.html#eksempler",
    "title": "25¬† Lese filer fra b√∏tte",
    "section": "25.1 Eksempler",
    "text": "25.1 Eksempler\n\n\n\n\n\n\n‚Äúnavn-boette‚Äù eksisterer ikke og m√• byttes med en reel b√∏tte.\n\n\n\nLes json fil fra b√∏tte:\nimport dapla as dp\n\ndata_frame = dp.read_pandas(\"gs://ssb-staging-navn-boette/schema.json\",\n file_format=\"json\")\nList ut mapper i b√∏tta:\nfrom dapla import FileClient\n\nFileClient.ls(\"gs://ssb-staging-navn-boette/\")"
  },
  {
    "objectID": "lese-data.html#vanlige-problemer",
    "href": "lese-data.html#vanlige-problemer",
    "title": "25¬† Lese filer fra b√∏tte",
    "section": "25.2 Vanlige problemer",
    "text": "25.2 Vanlige problemer\n\n25.2.1 Feil milj√∏\nEn vanlig √•rsak til feil er at man fors√∏ker √• lese data fra et annet milj√∏ enn det man befinner seg i. Sjekk at url feltet i nettleseren stemmer overens med b√∏ttene man fors√∏ker √• aksessere.\nStagingb√∏tter starter med: gs://ssb-staging-\nProduksjonsb√∏tter starter med: gs://ssb-prod-\n\n\n\n\n\n\nI https://jupyter.dapla-staging.ssb.no/ kan man ikke lese produksjonsb√∏tter.\n\n\n\n\n\n\n\n\n\nI https://jupyter.dapla.ssb.no/ kan man ikke lese stagingb√∏tter.\n\n\n\n\n\n25.2.2 Omstart av Jupyter\nNoen ganger kan en restart av Jupyter l√∏se problemet.\nI Jupyters filmeny velg: fil -> Hub Controll Panel.\nTrykk p√• knappen ‚ÄúStop My Server‚Äù. Etter dette kan man trykke knappen ‚ÄúStart My Server‚Äù.\n\n\n\nStop My Server\n\n\n\n\n25.2.3 Opprett TMS sak\nHvis man fortsatt ikke har tilgang, kan man opprette en TMS sak. For at vi lettes mulig skal kunne hjelpe b√∏r saken inneholde full feilmelding & relevant kode."
  },
  {
    "objectID": "remote.html",
    "href": "remote.html",
    "title": "26¬† IDE‚Äôer",
    "section": "",
    "text": "Forklare situasjonen n√•. Kun Jupyterlab. Kan kj√∏re remote session med Rstudio, Pycharm og VSCode."
  },
  {
    "objectID": "remote.html#rstudio",
    "href": "remote.html#rstudio",
    "title": "26¬† IDE‚Äôer",
    "section": "26.1 RStudio",
    "text": "26.1 RStudio"
  },
  {
    "objectID": "remote.html#vscode",
    "href": "remote.html#vscode",
    "title": "26¬† IDE‚Äôer",
    "section": "26.2 VSCode",
    "text": "26.2 VSCode"
  },
  {
    "objectID": "remote.html#pycharm",
    "href": "remote.html#pycharm",
    "title": "26¬† IDE‚Äôer",
    "section": "26.3 Pycharm",
    "text": "26.3 Pycharm"
  },
  {
    "objectID": "databaser.html#cloudsql",
    "href": "databaser.html#cloudsql",
    "title": "28¬† Databaser",
    "section": "28.2 CloudSQL",
    "text": "28.2 CloudSQL"
  }
]