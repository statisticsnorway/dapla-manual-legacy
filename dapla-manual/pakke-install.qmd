# Installere pakker 

## Python 
Installering av pakker er kun er mulig I et [virtuelt miljø](virtual-env.qmd). Det er [anbefalt å benytte poetry](virtual-env.qmd#Anbefalning) til dette. Eksemplene videre tar derfor utgangspunkt i et poetry prosjekt.

Det er mulig å [installere pakker med pip](https://packaging.python.org/en/latest/guides/installing-using-pip-and-virtual-environments/). Pakker kan installeres som normalt, hvis man har satt opp og aktivert et [virtuelt miljø](virtual-env.qmd). 

### Poetry prosjekt eksempel
Dette eksemplet viser hvordan man setter oppe et enkelt poetry prosjekt kalt test, hvis man ønsker å benytte et annet prosjektnavn må man endre dette i hver av kommandoene. 
 
Sett opp prosjektet: 
```bash 
poetry new test
```  

Naviger inn i prosjektmappen: 
```bash 
cd test
``` 
 
 Bruk poetry install for å bygge prosjektet: 

```bash 
poetry install
``` 

Hvis man får en tilbakemelding som denne er prosjektet satt opp korrekt: 
```shell 
Creating virtualenv test-EojoH6Zm-py3.10 in /home/jovyan/.cache/pypoetry/virtualenvs 
Updating dependencies 
Resolving dependencies... (0.1s) 

Writing lock file 
``` 

### Installering 
For å legge til pakker i et prosjekt benyttes kommandoen poetry add. 

Skal man legge til pakken "pendulum" vil det se slik ut: 
```bash 
poetry add pendulum
``` 

Poetry tilbyr måter å sette versjonsbegrensninger for pakker som legges til i et prosjekt, dette kan man [lese mer om her.](https://python-poetry.org/docs/cli/#add) 

### Avinstallering 
For å fjerne pakker fra et prosjekt benytter man poetry remove. 

Hvis man ønsker å fjerne "pendulum" fra et prosjekt vil kommandoen se slik ut: 
```bash 
poetry remove pendulum
``` 

### Oppgradere pakker 
For å oppdatere pakker i et prosjekt benytter man kommandoen poetry update. 

Skal man oppdatere pakken "pendulum" bruker man: 
```bash 
poetry update pendulum
``` 

 
 

Skal man oppdatre alle pakken i et prosjekt benytter man: 

```bash 
poetry update 
``` 

 
 

### Sikkerhet 

Hvem som helst kan legge til pakker på PyPi, det betyr at de i verstefall, kan inneholde skadelig kode. Her er en list med viktige tiltak som minimere risikoen:  

a) Før man installerer pakker bør man alltid søke de opp på [https://pypi.org](https://pypi.org). Det er anbefalt å klippe og lime inn pakkenavnet når man skal legge det til i et prosjekt.  

b) Undersøk prosjektets tilknyttede repository. Tilhører det en kjent organisasjon (f.eks. [SSB](https://github.com/statisticsnorway))?  

c) Er det et populært/velkjent prosjekt? Hvor mange stjerner og forks har repoet? 

## R

### Installering

### Avinstallering

### Oppgradere pakker