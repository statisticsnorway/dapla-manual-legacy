# Hva er Dapla-team?

For å kunne jobbe med skarpe/ekte data på Dapla må man opprette et et **Dapla-team**. Et dapla-team er en gruppe personer som jobber med et eller flere emneområder på SSBs nye dataplattform/Dapla. Når man [oppretter et Dapla-team](./opprette-dapla-team.html) i SSB får man følgende: 

- Lagringsområde for data i [Google Cloud Storage (GCS)](https://cloud.google.com/storage#section-1)^[Lagringsområdet tilsvarer *stammene* på bakken.]
- Tilgangskontroll til lagringsområdet
- Tjeneste for synkronisering av data mellom bakke og sky (Transfer Service)

Men et Dapla-team er ikke bare et sett med Google-tjenester knyttet til en gruppe ansatte. Det er også knyttet arbeidsprosesser og rutiner til et Dapla-team , som er bestemt av SSB selv. I det følgende forklarer vi begge deler.



## Google-tjenester

Når man oppretter et Dapla-team får man tilgang til en del tjenester som blir ferdig satt opp for oss. Det er viktig å forstå hva disse tjenestene er, og hvordan de kan brukes. Vi velger her å bruke navnene på tjenestene som Google bruker, for å gjøre det lettere for deg å lese om dette andre steder.

### Google project

Når et Dapla-team etableres lages det to [*Google Projects*](https://cloud.google.com/storage/docs/projects) i GCP. Google-prosjektene er det som samler alle tjenestene på plattformen som du får tilgang til. De to miljøene som opprettes er^[Les mer om hvordan du logger deg inn i de ulike miljøene [her](./innlogging.html).]: 

1. [Prod-miljø](https://jupyter.dapla.ssb.no/)
2. [Staging-miljø](https://jupyter.dapla.staging.ssb.no/)

Disse to prosjektene er helt isolerte områder på GCP, for helt forskjellige formål. Men de deler samme tilgangsroller og lagringsområder.

Prod-prosjektet er det som skal brukes i statistikkproduksjon, mens staging-prosjektet er et testmiljø som kan brukes til å teste nye tjenester eller nye versjoner av eksisterende tjenester. Sistnevnte kan er også der du kan teste koden som skal brukes i prod^[Staging-miljøet skal ikke ha *ekte* data. Man skal teste på egne test-data]. I løpende produksjon bruker man alltid prod-miljøet.


### Datalagring

::: {.callout-note}
## Hva er en bøtte?

Vi kommer til å bruke ordet **bøtte** mye i denne delen, og det er derfor ryddig å forklare hva det er. 

En [*bøtte*](https://cloud.google.com/storage/docs/buckets) er en container for data i GCS. En bøtte kan inneholde en eller flere mapper og undermapper. En bøtte er noe annet en en mappe, og har derfor fått et eget ord på engelsk (*buckets*).

Hvis vi skulle sammenlignet det med våre systemer på bakken vil det ligne mye på en diskstasjon, for eksempel X- og S-disken. 

:::

En av de viktigste tjenestene for en statistikkprodusent er å ha et trygt sted å lagre dataene sine. Ved opprettelsen av et Dapla-team får alle sitt eget dedikerte lagringsområde på GCS. Hvert lagringsområde innholder 3 [*storage buckets*](https://cloud.google.com/storage/docs/buckets) (ofte kalt *bøtter* på norsk) hvor man kan gi ulike personer ulik tilgang. De tre bøttene er:

- kilde
- produkt
- delt

I tillegg til de 3 bøttene kan man be om å få to ekstra bøtter ved opprettelsen av et Dapla-team. En bøtte for å flytte data fra bakke til sky, og en for å flytte motsatt vei. De to bøttene heter:

- synk-opp
- synk-ned

Lag en figur på dette.

::: {.callout-note}
## Flytte data mellom bakke og sky

Når du har fått opprettet et Dapla-team så har du fått din egen mappe i Linux-miljøet på bakken. Hvis du f.eks. har opprettet et team med (teknisk) navn **skatt-person**, så vil du få en mappe på bakken som heter `/ssb/cloud_sync/skatt-person`. Filene du ønsker å flytte fra bakken til sky må legges her for at skal kunne flyttes.

:::

### Tilgangsroller

Ved opprettelsen av et Dapla-team så blir du bedt om å plassere medlemmene i en av tre ulike tilgangsroller. Disse er:

1. data-admin
2. developer
3. consumer

Vis en figur på dette og forklar rundt det.

### Et eksempel

La oss anta at vi har fått opprettet et Dapla-team med navnet **skatt-person**. Da vil vi få følgende bøtter:

- skatt-person-kilde
- skatt-person-produkt
- skatt-person-delt
- skatt-person-synk-opp
- skatt-person-synk-ned

I tillegg vil vi få en mappe på bakken som heter `/ssb/cloud_sync/skatt-person`. Her kan vi legge filer som vi ønsker å flytte til skyen.

@tbl-tilgangsroller viser hvilke roller som har tilgang til hvilke bøtter/mapper. 

|                                 | data-admin | developer | consumer |
| ------------------------------- | ---------- | --------- | -------- |
| skatt-person-kilde              | X          |           |          |
| skatt-person-produkt            | X          | X         |          |
| skatt-person-delt               | X          | X         | X        |
| skatt-person-synk-opp           | X          | X         |          |
| skatt-person-synk-ned           | X          | X         |          |
| /ssb/cloud\_sync/skatt\_person/ | X          |           |          |
: Tilgangsroller og lagringsområder {#tbl-tilgangsroller}



## Prosesser og arbeidsrutiner

I tillegg til man får tilgang til spesifikke GCP-tjenester ved opprettelse av et Dapla-team, så er det også lagt opp til noen spesifikke arbeidsprosesser rundt bøtter og tilgangsroller.

I det følgende knytter vi de tekniske tjenestene som er beskrevet over til begrepene datatilstander^[Datatilstander er et begrep som er definert i et internt dokument i SSB. [Du finner det her](https://ssbno.sharepoint.com/:b:/r/sites/Internedokumenter/Delte%20dokumenter/Interne%20dokumenter%202021/2021-17%20Datatilstander%20i%20SSB%20.pdf?csf=1&web=1&e=9uTReP).].

### Kildedata

Kildedata er data som er produsert av andre enn SSB. Det kan være data fra andre statlige etater, eller fra private aktører. Kildedata er ofte i form av en fil, eller en mappe med filer. Kildedata skal lagres i bøtten *kilde* i GCS.

Kildedata skal lagres i den formen den kom til SSB i kildebøtta. Det vil ofte forekomme at disse dataene er sensitive og at de kan inneholde informasjon som ikke skal brukes videre i statistikkproduksjon. Derfor er det kun data-admin som skal ha tilgang til denne bøtten. Og det bør være så få som mulig på teamet som har rollen *data-admin*, spesielt hvis det er sensitive data.

**data-admin** har ansvaret for å sørge for at kildedata behandles på en måte som gjør at den tilgjengeliggjøres for resten av teamet. Typisk vil dette innebære^[Hvilken behandling av dataene som kreves vil avhenge av datakildene og kan variere fra statistikk til statistikk.]:

- pseudonymisering
- dataminimering
- kvalitetssikring
- konvertering til et felles format

Det er ikke tenkt at data-admin skal måtte kjøre dette *manuelt*, men at det skal være en del av en automatisk prosess.

### Inndata, statistikkdata og utdata

Når data-admin har behandlet kildedataene så vil de tilgjengeliggjøres for resten av teamet i produkt-bøtta. Her har alle med tilgangsrollen **developer** tilgang til å lese og skrive.

I produktbøtta skal det lagres tre typer data:

1. Inndata
2. Statistikkdata
3. Utdata

Les mer om det her.

### Deling av data

Når andre Dapla-team skal ha tilgang til data fra ditt team, må de søke om å få tilgangsrollen **consumer** i ditt team. Du må dermed tilgjengeliggjøre dataene som skal deles i din delt-bøtte.

Mer kommer. 

