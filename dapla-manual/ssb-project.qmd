# SSB-project

Produksjonsløp på **Dapla** kan med fordel følge noen helt klare retningslinjer for arbeidsprosesser og kode. Dette bør blant annet inkludere:

1. **Standard mappestruktur**
En standard mappestruktur gjør det lettere å dele og samarbeide om kode, som igjen reduserer sårbarheten knyttet til at få personer kjenner koden.
2. **Virtuelt miljø**
Virtuelle miljøer isoloerer og lagrer informasjon knyttet til kode. For at publiserte tall skal være reproduserbare er SSB avhengig av at blant annet pakkeversjoner og versjon av Python/R lagres sammen med kode som er kjørt.
3. **Versjonshåndtering med Git**
Versjonshåndtering av kode er svært viktig for å kunne gjenskape og samarbeide om kode. [Git](https://git-scm.com/) er verdensstandarden for å gjøre dette, og derfor legges det opp til at all kode skal versjonshåndteres med Git i SSB.
4. **Lagre kode på Github**
På Dapla er det ingen fellesmappe som alle i SSB har tilgang til og hvor vi kan dele kode slik vi har gjort i bakkemiljøet tidligere. Kode som er versjonshåndtert med Git bruker som regel et remote repo^[*Remote repo* er en felle mappe som er lagret på en annen maskin. [Les mer her.](https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes)] som er spesialsydd for Git og som skal deles med resten av verden hvis man ønsker. I SSB har vi valgt å bruke GitHub, der SSB har et eget område som heter [statisticsnorway](https://github.com/statisticsnorway).

[Team Statistikktjenester](https://statistics-norway.atlassian.net/wiki/spaces/STAT/overview?homepageId=3127312686) har laget en CLI^[CLI = Command-Line-Interface. Dvs. et program som er skrevet for å brukes terminalen ved hjelp av enkle kommandoer.] som skal gjøre dette lett å implemententere dette i kode. Den heter [ssb-project](https://github.com/statisticsnorway/ssb-project-cli) og hjelper deg implementere det som til enhver tid er beste-praksis for koding.

Under vises det hvordan man bruker `ssb-project` til sette opp et prosjekt. Men programmet forutsettet at du har en GitHub-bruker som er knyttet opp mot [statisticsnorway](https://github.com/statisticsnorway). De første underkapitlene er derfor en beskrivelse av dette.


## Opprett ssb-project

Programmet [ssb-project](https://github.com/statisticsnorway/ssb-project-cli) skal gjøre det enklere å organiserer kode etter god praksis i en statistikkproduksjoner. Som nevnt i innledningen vil progammet gi deg en mappestruktur, virtuelt miljø og en jupyter-kernel. Hvis du ønsker kan det også opprette et GitHub-repo. Ønsker du alt gjør du følgende:

1. Åpne en terminal. De fleste vil gjøre dette i Jupyterlab på bakke eller sky og da kan de bare trykke på det blå +-tegnet i Jupyterlab og velge **Terminal**.

2. Før vi kjører programmet må vi være obs på at **ssb-project** vil opprette en ny mappe der vi står. Gå derfor til den mappen du ønsker å ha den nye prosjektmappen. For å opprette et prosjekt som heter **stat-testprod** Deretter skriver du følgende i terminalen:

`ssb-project create stat-testprod`

::: {.grid}

::: {.g-col-8}
Hvis du stod i hjemmemappen din på når du skrev inn kommandoen over i terminalen, så har du fått mappestrukturen som vises i bildet til høyre. ^[Filer og mapper som starter med punktum er skjulte med mindre man ber om å se dem. I Jupyterlab kan disse vises i filutforskeren ved å velge **View** fra menylinjen, og deretter velge **Show hidden files**. I en terminal skriver man `ls -a` for å se de.]. Den inneholder følgende :

- **.git**-mappe som blir opprettet for å versjonshåndtere med Git.
- **src**-mappe som skal inneholde all koden som utgjør produksjonsløpet.
- **tests**-mappe som inneholder tester du skriver for koden din.
- **LICENCE**-fil som skal benyttes for public-repos i SSB.
- **poetry.lock**-fil som inneholder alle versjoner av Python-pakker som blir brukt.
- **README.md**-fil som brukes for tekstlig innhold på GitHub-siden for prosjektet.


:::

::: {.g-col-4}
![](images/ssbproject_folders.png)

:::

:::

Over så opprettet vi et ssb-project uten å opprette et GitHub-repo med samme navn. Hvis du ønsker å opprette et GitHub-repo også må du endre kommandoen over til:

`ssb-project create stat-testprod --github github-token='blablabla'`

Kommandoen over oppretter en mappestruktur slik vi så tidligere, men også et ssb-project som heter **stat-testprod** med et GitHub-repo med samme navn. Repoet i GitHub ser da slik ut:

![](images/ssbproject_github.png)
